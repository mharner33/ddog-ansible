---
  # The purpose of this playbook is to do a couple of things:
  # 1.  Install the datadog agent (linux specifically)
  # 2.  Enable process collection
  # 3.  Enable Datadog NPM if the kernel version supports it
  # 4.  Set the availability-zone tag to a default value
  # 9.  Restart the Datadog agent
-

  # Hosts: where our play will run and options it will run with
  hosts: <host-group> 
  roles: 
    - { role: datadog.datadog, become: yes }
  vars:
    datadog_api_key: "<datadog api key>"
    # Change this if you are not in us1 {AWS)
    # - example: us3.datadoghq.com for Azure
    # - us5.datadoghq.com for Google cloud 
    datadog_site: "datadoghq.com"
    datadog_agent_major_version: 7
    datadog_config:
      tags:
        - "availability-zone: default"
      process_config:
        enabled: "true"
    datadog_checks:
      custom_sensors:
        init_config:
        instances:
          - {}
    datadog_custom_checks:
      custom_sensors: './datadog-sensors/custom_sensors.py'
    network_config:
      enabled: "true"

   # This Play modifies the availibility-zone tag based on host name prefix
   # Install the lm_sensors package if it is physical host and not a VM
   # Install the PySensors package (required for Datadog sensors plugin)  
- 
    hosts: <host-group>
    vars_files:
      - vars.yaml
    vars:
      ansible_ssh_private_key_file: "{{ key1 }}"
      datadog_path: "/etc/datadog-agent/datadog.yaml"
    tasks:

    # Set the availability-zone based on the hostname prefix
    # Add additional blocks for other data
    - name: Set the availability-zone tag based on hostname
      lineinfile:
        path: "{{ datadog_path }}"
        search_string:  'availability-zone: default'
        line: 'availability-zone: singapore'
      when: ansible_hostname.startswith('sin')

    - name: Set the availability-zone tag based on hostname
      lineinfile:
        path: "{{ datadog_path }}"
        search_string: 'availability-zone: default'
        line: 'availability-zone: austin'
      when: ansible_hostname.startswith('aus')

    - name: Set the availability-zone tag based on hostname
      lineinfile:
        path: "{{ datadog_path }}"
        search_string: 'availability-zone: default'
        line: 'availability-zone: irvine'
      when: ansible_hostname.startswith('irv')

    - name: Install the lm_sensors package for centos/Redhat
      yum:
        name: lm_sensors
        state: present
      when: ansible_virtualization_role == "host"

    - name: Install the PySensors package
      pip:
        executable: /opt/datadog-agent/embedded/bin/pip3
        name: PySensors

    - name: Restart the datadog-agent
      ansible.builtin.service:
        name: datadog-agent
        state: reloaded
...
